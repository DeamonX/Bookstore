generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  PUBLISHER
  AUTHOR
  VISITOR
}

enum BookType {
  ACTION
  HORROR
  ADVENTURE
  FANTASY
}

enum Genders {
  MALE
  FEMALE
}
enum COUNTRY {
  AFGHANISTAN
  ALBANIA
  ALGERIA
  ANDORRA
  ANGOLA
  ANTIGUAANDBARBUDA
  ARGENTINA
  ARMENIA
  AUSTRALIA
  AUSTRIA
  AZERBAIJAN
  BAHAMAS
  BAHRAIN
  BANGLADESH
  BARBADOS
  BELARUS
  BELGIUM
  BELIZE
  BENIN
  BHUTAN
  BOLIVIA
  BOSNIAANDHERZEGOVINA
  BOTSWANA
  BRAZIL
  BRUNEI
  BULGARIA
  BURKINAFASO
  BURUNDI
  CABOVERDE
  CAMBODIA
  CAMEROON
  CANADA
  CENTRALAFRICANREPUBLIC
  CHAD
  CHILE
  CHINA
  COLOMBIA
  COMOROS
  CONGO
  COSTARICA
  CROATIA
  CUBA
  CYPRUS
  CZECHIA
  DENMARK
  DJIBOUTI
  DOMINICA
  DOMINICANREPUBLIC
  EASTTIMOR
  ECUADOR
  EGYPT
  ELSALVADOR
  EQUATORIALGUINEA
  ERITREA
  ESTONIA
  ESWATINI
  ETHIOPIA
  FIJI
  FINLAND
  FRANCE
  GABON
  GAMBIA
  GEORGIA
  GERMANY
  GHANA
  GREECE
  GRENADA
  GUATEMALA
  GUINEA
  GUINEABISSAU
  GUYANA
  HAITI
  HONDURAS
  HUNGARY
  ICELAND
  INDIA
  INDONESIA
  IRAN
  IRAQ
  IRELAND
  ISRAEL
  ITALY
  JAMAICA
  JAPAN
  JORDAN
  KAZAKHSTAN
  KENYA
  KIRIBATI
  KOREA
  KOSOVO
  KUWAIT
  KYRGYZSTAN
  LAOS
  LATVIA
  LEBANON
  LESOTHO
  LIBERIA
  LIBYA
  LIECHTENSTEIN
  LITHUANIA
  LUXEMBOURG
  MADAGASCAR
  MALAWI
  MALAYSIA
  MALDIVES
  MALI
  MALTA
  MARSHALLISLANDS
  MAURITANIA
  MAURITIUS
  MEXICO
  MICRONESIA
  MOLDOVA
  MONACO
  MONGOLIA
  MONTENEGRO
  MOROCCO
  MOZAMBIQUE
  MYANMAR
  NAMIBIA
  NAURU
  NEPAL
  NETHERLANDS
  NEWZEALAND
  NICARAGUA
  NIGER
  NIGERIA
  NORTHMACEDONIA
  NORWAY
  OMAN
  PAKISTAN
  PALAU
  PANAMA
  PAPUANEWGUINEA
  PARAGUAY
  PERU
  PHILIPPINES
  POLAND
  PORTUGAL
  QATAR
  ROMANIA
  RUSSIA
  RWANDA
  SAINTKITTSANDNEVIS
  SAINTLUCIA
  SAINTVINCENTANDTHEGRENADINES
  SAMOA
  SANMARINO
  SAOTOMEANDPRINCIPE
  SAUDIARABIA
  SENEGAL
  SERBIA
  SEYCHELLES
  SIERRALEONE
  SINGAPORE
  SLOVAKIA
  SLOVENIA
  SOLOMONISLANDS
  SOMALIA
  SOUTHAFRICA
  SOUTHSUDAN
  SPAIN
  SRILANKA
  SUDAN
  SURINAME
  SWEDEN
  SWITZERLAND
  SYRIA
  TAIWAN
  TAJIKISTAN
  TANZANIA
  THAILAND
  TIMORLESTE
  TOGO
  TONGA
  TRINIDADANDTOBAGO
  TUNISIA
  TURKEY
  TURKMENISTAN
  TUVALU
  UGANDA
  UKRAINE
  UNITEDARABEMIRATES
  UNITEDKINGDOM
  UNITEDSTATES
  URUGUAY
  UZBEKISTAN
  VANUATU
  VATICANCITY
  VENEZUELA
  VIETNAM
  YEMEN
  ZAMBIA
  ZIMBABWE
}


model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  role          UserRole  @default(VISITOR)
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Book {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  authorId         String    @db.ObjectId
  publisherId      String    @db.ObjectId
  title            String
  type             BookType
  publication_date DateTime?
  price            Int
  Author           Author    @relation(fields: [authorId], references: [id])
}

model Author {
  id                     String     @id @default(auto()) @map("_id") @db.ObjectId
  author_first_name      String
  author_last_name       String?
  gender                 Genders
  dob                    DateTime?
  author_country         COUNTRY?
  favorite_bookId        String?    @db.ObjectId
  favorite_book_category BookType?
  books                  Book[]
  Publisher              Publisher? @relation(fields: [publisherId], references: [id])
  publisherId            String?    @db.ObjectId
}

model Publisher {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  publisher_name        String    @unique
  date_of_establishment DateTime?
  publisher_country     COUNTRY
  authors               Author[]
}
