generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  PUBLISHER
  AUTHOR
  VISITOR
}

enum BookType {
  ACTION
  HORROR
  ADVENTURE
  FANTASY
}

enum Genders {
  MALE
  FEMALE
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  role          UserRole  @default(VISITOR)
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Book {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  authorId         String    @db.ObjectId
  publisherId      String    @db.ObjectId
  title            String
  type             BookType
  publication_date DateTime?
  price            Int
  Author           Author    @relation(fields: [authorId], references: [id])
}

model Author {
  id                     String     @id @default(auto()) @map("_id") @db.ObjectId
  author_first_name      String
  author_last_name       String?
  gender                 Genders
  dob                    DateTime?
  author_country         String?
  favorite_bookId        String?    @db.ObjectId
  favorite_book_category BookType?
  books                  Book[]
  Publisher              Publisher? @relation(fields: [publisherId], references: [id])
  publisherId            String?    @db.ObjectId
}

model Publisher {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  publisher_name        String    @unique
  date_of_establishment DateTime?
  publisher_country     String
  authors               Author[]
}
